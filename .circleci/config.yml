# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      # Checkout the code as the first step.
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn dependency:go-offline
      # Then run your tests!

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Test
          command: mvn integration-test jacoco:report

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/;
            mkdir -p ~/test-artifacts/;
            find . -type d -regex ".*/target/surefire-reports" -exec cp {} ~/test-results/junit/ \;
            cd target;
            tar -zcvf surefire-reports.tar.gz surefire-reports;
            mv surefire-reports.tar.gz ~/test-artifacts/;
            cd site;
            tar -zcvf jacoco.tar.gz jacoco;
            mv jacoco.tar.gz ~/test-artifacts/;
          when: always

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-artifacts

#      - run:
#          name: Send to CodeCov
#          command: bash <(curl -s https://codecov.io/bash)
workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build:
    jobs:
      - build-and-test